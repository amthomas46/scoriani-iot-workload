{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "IotHubs_iotworkload_connectionString": {
            "type": "SecureString"
        },
        "IotHubs_iotworkload_containerName": {
            "type": "SecureString"
        },
        "servers_scorianiiot_name": {
            "defaultValue": "scorianiiot",
            "type": "String"
        },
        "IotHubs_iotworkload_name": {
            "defaultValue": "iotworkload",
            "type": "String"
        },
        "sites_scoriani_iot_workload_name": {
            "defaultValue": "scoriani-iot-workload",
            "type": "String"
        },
        "serverfarms_scorianiiotworkload_name": {
            "defaultValue": "scorianiiotworkload",
            "type": "String"
        },
        "virtualMachines_devicesimulator_name": {
            "defaultValue": "devicesimulator",
            "type": "String"
        },
        "databaseAccounts_scorianiiot_name": {
            "defaultValue": "scorianiiot",
            "type": "String"
        },
        "components_iotappldp7q5lwdebcw_name": {
            "defaultValue": "iotappldp7q5lwdebcw",
            "type": "String"
        },
        "actionGroups_scorianiactiongroup_name": {
            "defaultValue": "scorianiactiongroup",
            "type": "String"
        },
        "storageAccounts_sqlvaxinc7c46kilhy_name": {
            "defaultValue": "sqlvaxinc7c46kilhy",
            "type": "String"
        },
        "workspaces_scoriani_iot_name": {
            "defaultValue": "scoriani-iot",
            "type": "String"
        },
        "storageAccounts_iotappldp7q5lwdebcw_name": {
            "defaultValue": "iotappldp7q5lwdebcw",
            "type": "String"
        },
        "networkInterfaces_devicesimulator116_name": {
            "defaultValue": "devicesimulator116",
            "type": "String"
        },
        "activityLogAlerts_scoriani_iot_alert_name": {
            "defaultValue": "scoriani-iot-alert",
            "type": "String"
        },
        "solutions_SQLAuditing_scoriani_iot__name": {
            "defaultValue": "SQLAuditing[scoriani-iot]",
            "type": "String"
        },
        "dashboards_bd207813_ce39_4683_8729_30e0b9e90216_dashboard_name": {
            "defaultValue": "bd207813-ce39-4683-8729-30e0b9e90216-dashboard",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___iotappldp7q5lwdebcw_name": {
            "defaultValue": "failure anomalies - iotappldp7q5lwdebcw",
            "type": "String"
        },
        "actiongroups_application_insights_smart_detection_externalid": {
            "defaultValue": "/subscriptions/fa58cf66-caaf-4ba9-875d-f310d3694845/resourceGroups/sqladoption/providers/microsoft.insights/actiongroups/application insights smart detection",
            "type": "String"
        },
        "virtualNetworks_scorianivnet_externalid": {
            "defaultValue": "/subscriptions/fa58cf66-caaf-4ba9-875d-f310d3694845/resourceGroups/scoriani-demo/providers/Microsoft.Network/virtualNetworks/scorianivnet",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2021-03-31",
            "name": "[parameters('IotHubs_iotworkload_name')]",
            "location": "westus",
            "sku": {
                "name": "S3",
                "tier": "Standard",
                "capacity": 4
            },
            "identity": {
                "type": "None"
            },
            "properties": {
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 32
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "[parameters('IotHubs_iotworkload_connectionString')]",
                        "containerName": "[parameters('IotHubs_iotworkload_containerName')]"
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2021-05-15",
            "name": "[parameters('databaseAccounts_scorianiiot_name')]",
            "location": "West Europe",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "Non-Production"
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {},
                "databaseAccountOfferType": "Standard",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "West Europe",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8
                    }
                },
                "networkAclBypassResourceIds": []
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('actionGroups_scorianiactiongroup_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "scorianiiot",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "scorianiiot_-EmailAction-",
                        "emailAddress": "scoriani@microsoft.com",
                        "useCommonAlertSchema": false
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('components_iotappldp7q5lwdebcw_name')]",
            "location": "westus",
            "kind": "other",
            "properties": {
                "Application_Type": "web",
                "IngestionMode": "ApplicationInsights",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_devicesimulator116_name')]",
            "location": "westeurope",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.16.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(parameters('virtualNetworks_scorianivnet_externalid'), '/subnets/default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2020-10-01",
            "name": "[parameters('workspaces_scoriani_iot_name')]",
            "location": "westeurope",
            "properties": {
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Portal/dashboards",
            "apiVersion": "2020-09-01-preview",
            "name": "[parameters('dashboards_bd207813_ce39_4683_8729_30e0b9e90216_dashboard_name')]",
            "location": "westus",
            "tags": {
                "hidden-title": "IoT Synthetic Workload Dashboard"
            },
            "properties": {
                "lenses": [
                    {
                        "order": 0,
                        "parts": [
                            {
                                "position": {
                                    "x": 0,
                                    "y": 0,
                                    "rowSpan": 1,
                                    "colSpan": 2
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart"
                                }
                            },
                            {
                                "position": {
                                    "x": 2,
                                    "y": 0,
                                    "rowSpan": 1,
                                    "colSpan": 1
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart"
                                }
                            },
                            {
                                "position": {
                                    "x": 3,
                                    "y": 0,
                                    "rowSpan": 1,
                                    "colSpan": 1
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart"
                                }
                            },
                            {
                                "position": {
                                    "x": 4,
                                    "y": 0,
                                    "rowSpan": 1,
                                    "colSpan": 1
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {},
                                        {},
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/WebTestsPinnedPart"
                                }
                            },
                            {
                                "position": {
                                    "x": 5,
                                    "y": 0,
                                    "rowSpan": 1,
                                    "colSpan": 1
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/ApplicationMapPart",
                                    "settings": {}
                                }
                            },
                            {
                                "position": {
                                    "x": 6,
                                    "y": 0,
                                    "rowSpan": 1,
                                    "colSpan": 1
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart"
                                }
                            },
                            {
                                "position": {
                                    "x": 7,
                                    "y": 0,
                                    "rowSpan": 1,
                                    "colSpan": 1
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart"
                                }
                            },
                            {
                                "position": {
                                    "x": 8,
                                    "y": 0,
                                    "rowSpan": 1,
                                    "colSpan": 1
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart"
                                }
                            },
                            {
                                "position": {
                                    "x": 0,
                                    "y": 1,
                                    "rowSpan": 4,
                                    "colSpan": 6
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 6,
                                    "y": 1,
                                    "rowSpan": 4,
                                    "colSpan": 6
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 12,
                                    "y": 1,
                                    "rowSpan": 4,
                                    "colSpan": 6
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 0,
                                    "y": 5,
                                    "rowSpan": 3,
                                    "colSpan": 8
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 8,
                                    "y": 5,
                                    "rowSpan": 3,
                                    "colSpan": 8
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 16,
                                    "y": 5,
                                    "rowSpan": 4,
                                    "colSpan": 6
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
                                    "settings": {}
                                }
                            },
                            {
                                "position": {
                                    "x": 0,
                                    "y": 8,
                                    "rowSpan": 3,
                                    "colSpan": 8
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 8,
                                    "y": 8,
                                    "rowSpan": 3,
                                    "colSpan": 8
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 16,
                                    "y": 9,
                                    "rowSpan": 4,
                                    "colSpan": 6
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 0,
                                    "y": 11,
                                    "rowSpan": 4,
                                    "colSpan": 16
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 16,
                                    "y": 13,
                                    "rowSpan": 4,
                                    "colSpan": 6
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 0,
                                    "y": 15,
                                    "rowSpan": 4,
                                    "colSpan": 8
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 8,
                                    "y": 15,
                                    "rowSpan": 4,
                                    "colSpan": 8
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            },
                            {
                                "position": {
                                    "x": 16,
                                    "y": 17,
                                    "rowSpan": 4,
                                    "colSpan": 6
                                },
                                "metadata": {
                                    "inputs": [
                                        {},
                                        {}
                                    ],
                                    "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                    "settings": {
                                        "content": {}
                                    }
                                }
                            }
                        ]
                    }
                ],
                "metadata": {
                    "model": {}
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-02-01-preview",
            "name": "[parameters('servers_scorianiiot_name')]",
            "location": "westeurope",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "scoriani",
                "version": "12.0",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[parameters('storageAccounts_iotappldp7q5lwdebcw_name')]",
            "location": "westus",
            "tags": {
                "displayName": "warmPathStorage"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[parameters('storageAccounts_sqlvaxinc7c46kilhy_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_scorianiiotworkload_name')]",
            "location": "West US",
            "sku": {
                "name": "P3v2",
                "tier": "PremiumV2",
                "size": "P3v2",
                "family": "Pv2",
                "capacity": 3
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___iotappldp7q5lwdebcw_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[parameters('actiongroups_application_insights_smart_detection_externalid')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[parameters('virtualMachines_devicesimulator_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_devicesimulator116_name'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D4s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_devicesimulator_name'), '_OsDisk_1_705a45c871b24b0b952b171c008d8fb7')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_devicesimulator_name'), '_OsDisk_1_705a45c871b24b0b952b171c008d8fb7'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_devicesimulator_name')]",
                    "adminUsername": "scoriani",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_devicesimulator116_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
            "apiVersion": "2021-05-15",
            "name": "[concat(parameters('databaseAccounts_scorianiiot_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_scorianiiot_name'))]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2021-05-15",
            "name": "[concat(parameters('databaseAccounts_scorianiiot_name'), '/pcs-storage')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_scorianiiot_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "pcs-storage"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2021-05-15",
            "name": "[concat(parameters('databaseAccounts_scorianiiot_name'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_scorianiiot_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": 0,
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_scorianiiot_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2021-05-15",
            "name": "[concat(parameters('databaseAccounts_scorianiiot_name'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_scorianiiot_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": 0,
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_scorianiiot_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/activityLogAlerts",
            "apiVersion": "2020-10-01",
            "name": "[parameters('activityLogAlerts_scoriani_iot_alert_name')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_scorianiactiongroup_name'))]"
            ],
            "properties": {
                "scopes": [
                    "/subscriptions/fa58cf66-caaf-4ba9-875d-f310d3694845"
                ],
                "condition": {
                    "allOf": [
                        {
                            "field": "category",
                            "equals": "ServiceHealth"
                        },
                        {
                            "field": "properties.impactedServices[*].ServiceName",
                            "containsAny": [
                                "SQL Database"
                            ]
                        },
                        {
                            "field": "properties.impactedServices[*].ImpactedRegions[*].RegionName",
                            "containsAny": [
                                "Global"
                            ]
                        }
                    ]
                },
                "actions": {
                    "actionGroups": [
                        {
                            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_scorianiactiongroup_name'))]",
                            "webhookProperties": {}
                        }
                    ]
                },
                "enabled": true
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/degradationindependencyduration')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationindependencyduration",
                    "DisplayName": "Degradation in dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/degradationinserverresponsetime')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationinserverresponsetime",
                    "DisplayName": "Degradation in server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/digestMailConfiguration')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "digestMailConfiguration",
                    "DisplayName": "Digest Mail Configuration",
                    "Description": "This rule describes the digest mail preferences",
                    "HelpUrl": "www.homail.com",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/extension_billingdatavolumedailyspikeextension')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_billingdatavolumedailyspikeextension",
                    "DisplayName": "Abnormal rise in daily data volume (preview)",
                    "Description": "This detection rule automatically analyzes the billing data generated by your application, and can warn you about an unusual increase in your application's billing costs",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/billing-data-volume-daily-spike.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/extension_canaryextension')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_canaryextension",
                    "DisplayName": "Canary extension",
                    "Description": "Canary extension",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/extension_exceptionchangeextension')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_exceptionchangeextension",
                    "DisplayName": "Abnormal rise in exception volume (preview)",
                    "Description": "This detection rule automatically analyzes the exceptions thrown in your application, and can warn you about unusual patterns in your exception telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/abnormal-rise-in-exception-volume.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/extension_memoryleakextension')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_memoryleakextension",
                    "DisplayName": "Potential memory leak detected (preview)",
                    "Description": "This detection rule automatically analyzes the memory consumption of each process in your application, and can warn you about potential memory leaks or increased memory consumption.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/memory-leak.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/extension_securityextensionspackage')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_securityextensionspackage",
                    "DisplayName": "Potential security issue detected (preview)",
                    "Description": "This detection rule automatically analyzes the telemetry generated by your application and detects potential security issues.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/application-security-detection-pack.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/extension_traceseveritydetector')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_traceseveritydetector",
                    "DisplayName": "Degradation in trace severity ratio (preview)",
                    "Description": "This detection rule automatically analyzes the trace logs emitted from your application, and can warn you about unusual patterns in the severity of your trace telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/degradation-in-trace-severity-ratio.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/longdependencyduration')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "longdependencyduration",
                    "DisplayName": "Long dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/migrationToAlertRulesCompleted')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "migrationToAlertRulesCompleted",
                    "DisplayName": "Migration To Alert Rules Completed",
                    "Description": "A configuration that controls the migration state of Smart Detection to Smart Alerts",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": true,
                    "IsEnabledByDefault": false,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": false,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/slowpageloadtime')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowpageloadtime",
                    "DisplayName": "Slow page load time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_iotappldp7q5lwdebcw_name'), '/slowserverresponsetime')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowserverresponsetime",
                    "DisplayName": "Slow server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_General|AlphabeticallySortedComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "All Computers with their most recent data",
                "category": "General Exploration",
                "query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_General|dataPointsPerManagementGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Which Management Group is generating the most data points?",
                "category": "General Exploration",
                "query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_General|dataTypeDistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Distribution of data Types",
                "category": "General Exploration",
                "query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_General|StaleComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Stale Computers (data older than 24 hours)",
                "category": "General Exploration",
                "query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|AllEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "All Events",
                "category": "Log Management",
                "query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|AllSyslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "All Syslogs",
                "category": "Log Management",
                "query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|AllSyslogByFacility')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records grouped by Facility",
                "category": "Log Management",
                "query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|AllSyslogByProcessName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records grouped by ProcessName",
                "category": "Log Management",
                "query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|AllSyslogsWithErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records with Errors",
                "category": "Log Management",
                "query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Average HTTP Request time by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Average HTTP Request time by HTTP Method",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by HTTP Request Method",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by HTTP User Agent",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by Host requested by client",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "category": "Log Management",
                "query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|CountOfWarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "category": "Log Management",
                "query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Shows breakdown of response codes",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|EventsByEventLog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event Log",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|EventsByEventsID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event ID",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|EventsByEventSource')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event Source",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|EventsWithStartedinEventID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events containing the word \"started\" grouped by EventID",
                "category": "Log Management",
                "query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Find the maximum time taken for each page",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "category": "Log Management",
                "query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|ListAllIISLogEntries')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "All IIS Log Entries",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "How many connections to Operations Manager's SDK service by day",
                "category": "Log Management",
                "query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|ServerRestartTime')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "When did my servers initiate restart?",
                "category": "Log Management",
                "query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|Show404PagesList')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Shows which pages people are getting a 404 for",
                "category": "Log Management",
                "query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Shows servers that are throwing internal server error",
                "category": "Log Management",
                "query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes received by each Azure Role Instance",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes received by each IIS Computer",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes responded back to clients by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes sent by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|WarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "All Events with level \"Warning\"",
                "category": "Log Management",
                "query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "Windows Firewall Policy settings have changed",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_scoriani_iot_name'), '/LogManagement(', parameters('workspaces_scoriani_iot_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "properties": {
                "displayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('solutions_SQLAuditing_scoriani_iot__name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_scoriani_iot_name'))]"
            ],
            "plan": {
                "name": "SQLAuditing[scoriani-iot]",
                "promotionCode": "",
                "product": "SQLAuditing",
                "publisher": "Microsoft"
            },
            "properties": {
                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_scoriani_iot_name'))]",
                "containedResources": [
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_scoriani_iot_name')), '/views/SQLAccessToSensitiveData')]",
                    "[concat(resourceId('microsoft.operationalinsights/workspaces', parameters('workspaces_scoriani_iot_name')), '/views/SQLSecurityInsights')]"
                ],
                "referencedResources": []
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "sku": {
                "name": "HS_Gen5",
                "tier": "Hyperscale",
                "family": "Gen5",
                "capacity": 8
            },
            "kind": "v12.0,user,vcore,hyperscale",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": -1,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "licenseType": "LicenseIncluded",
                "readScale": "Disabled",
                "highAvailabilityReplicaCount": 0,
                "requestedBackupStorageRedundancy": "Geo",
                "maintenanceConfigurationId": "/subscriptions/fa58cf66-caaf-4ba9-875d-f310d3694845/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/master/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/master/current')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "status": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/ClientIp-2021-4-21_15-6-23')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "startIpAddress": "51.182.79.27",
                "endIpAddress": "51.182.79.27"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "startIpAddress": "167.220.0.0",
                "endIpAddress": "167.220.255.254"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": true,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_iotappldp7q5lwdebcw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotappldp7q5lwdebcw_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_sqlvaxinc7c46kilhy_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvaxinc7c46kilhy_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_iotappldp7q5lwdebcw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotappldp7q5lwdebcw_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_sqlvaxinc7c46kilhy_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvaxinc7c46kilhy_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_iotappldp7q5lwdebcw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_sqlvaxinc7c46kilhy_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvaxinc7c46kilhy_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_iotappldp7q5lwdebcw_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_sqlvaxinc7c46kilhy_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvaxinc7c46kilhy_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_scoriani_iot_workload_name')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_scorianiiotworkload_name'))]"
            ],
            "kind": "functionapp,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_scoriani_iot_workload_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_scoriani_iot_workload_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_scorianiiotworkload_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOTNET|3.1",
                    "alwaysOn": true,
                    "http20Enabled": false
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_scoriani_iot_workload_name'), '/web')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_scoriani_iot_workload_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOTNET|3.1",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$scoriani-iot-workload",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": false,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_scoriani_iot_workload_name'), '/d977e576-8b48-445a-b373-c3b28ab5505b')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_scoriani_iot_workload_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "Push-Deployer",
                "message": "Created via a push deployment",
                "start_time": "2021-04-21T18:31:12.9593701Z",
                "end_time": "2021-04-21T18:31:15.8630101Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_scoriani_iot_workload_name'), '/scoriani_iot_workload')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_scoriani_iot_workload_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://scoriani-iot-workload.azurewebsites.net/admin/vfs/home/site/wwwroot/scoriani_iot_workload/",
                "script_href": "https://scoriani-iot-workload.azurewebsites.net/admin/vfs/home/site/wwwroot/bin/scoriani-iot-workload.dll",
                "config_href": "https://scoriani-iot-workload.azurewebsites.net/admin/vfs/home/site/wwwroot/scoriani_iot_workload/function.json",
                "href": "https://scoriani-iot-workload.azurewebsites.net/admin/functions/scoriani_iot_workload",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_scoriani_iot_workload_name'), '/', parameters('sites_scoriani_iot_workload_name'), '.azurewebsites.net')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_scoriani_iot_workload_name'))]"
            ],
            "properties": {
                "siteName": "scoriani-iot-workload",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2021-05-15",
            "name": "[concat(parameters('databaseAccounts_scorianiiot_name'), '/pcs-storage/pcs-storage')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_scorianiiot_name'), 'pcs-storage')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_scorianiiot_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "pcs-storage",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/CollectionId"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
            "apiVersion": "2021-05-15",
            "name": "[concat(parameters('databaseAccounts_scorianiiot_name'), '/pcs-storage/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_scorianiiot_name'), 'pcs-storage')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_scorianiiot_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400,
                    "autoscaleSettings": {
                        "maxThroughput": 4000
                    }
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [
                    "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                    "FAILED_DATABASE_AUTHENTICATION_GROUP",
                    "BATCH_COMPLETED_GROUP"
                ],
                "isAzureMonitorTargetEnabled": true,
                "state": "Enabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "retentionDays": 7
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [
                    "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                    "FAILED_DATABASE_AUTHENTICATION_GROUP",
                    "BATCH_COMPLETED_GROUP"
                ],
                "isAzureMonitorTargetEnabled": true,
                "state": "Enabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/Default')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/current')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "status": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/scoriani-iot/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_scorianiiot_name'), 'scoriani-iot')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true,
                    "emails": []
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(parameters('servers_scorianiiot_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_scorianiiot_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_sqlvaxinc7c46kilhy_name'))]"
            ],
            "properties": {
                "storageContainerPath": "[concat('https://', parameters('storageAccounts_sqlvaxinc7c46kilhy_name'), '.blob.core.windows.net/vulnerability-assessment/')]",
                "recurringScans": {
                    "isEnabled": true,
                    "emailSubscriptionAdmins": true,
                    "emails": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_iotappldp7q5lwdebcw_name'), '/default/azure-webjobs-eventhub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_iotappldp7q5lwdebcw_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_iotappldp7q5lwdebcw_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_iotappldp7q5lwdebcw_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_iotappldp7q5lwdebcw_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_iotappldp7q5lwdebcw_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_iotappldp7q5lwdebcw_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_sqlvaxinc7c46kilhy_name'), '/default/vulnerability-assessment')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_sqlvaxinc7c46kilhy_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvaxinc7c46kilhy_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}